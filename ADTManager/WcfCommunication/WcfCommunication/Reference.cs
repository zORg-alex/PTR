//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ADTManager.WcfCommunication {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ADTServiceOnConnectData", Namespace="http://schemas.datacontract.org/2004/07/ADTService.WcfCommunication")]
    [System.SerializableAttribute()]
    public partial class ADTServiceOnConnectData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ADTManager.WcfCommunication.ADTServiceOnConnectData.ConsoleLog[] ConsolesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ADTManager.WcfCommunication.ADTServiceOnConnectData.ConsoleLog[] Consoles {
            get {
                return this.ConsolesField;
            }
            set {
                if ((object.ReferenceEquals(this.ConsolesField, value) != true)) {
                    this.ConsolesField = value;
                    this.RaisePropertyChanged("Consoles");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="ADTServiceOnConnectData.ConsoleLog", Namespace="http://schemas.datacontract.org/2004/07/ADTService.WcfCommunication")]
        [System.SerializableAttribute()]
        public partial class ConsoleLog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string[] LinesField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string NameField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string[] Lines {
                get {
                    return this.LinesField;
                }
                set {
                    if ((object.ReferenceEquals(this.LinesField, value) != true)) {
                        this.LinesField = value;
                        this.RaisePropertyChanged("Lines");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Name {
                get {
                    return this.NameField;
                }
                set {
                    if ((object.ReferenceEquals(this.NameField, value) != true)) {
                        this.NameField = value;
                        this.RaisePropertyChanged("Name");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfCommunication.IWcfService", CallbackContract=typeof(ADTManager.WcfCommunication.IWcfServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IWcfService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/Connect", ReplyAction="http://tempuri.org/IWcfService/ConnectResponse")]
        ADTManager.WcfCommunication.ADTServiceOnConnectData Connect();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/Disconnect", ReplyAction="http://tempuri.org/IWcfService/DisconnectResponse")]
        void Disconnect();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWcfServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/WriteToConsole", ReplyAction="http://tempuri.org/IWcfService/WriteToConsoleResponse")]
        void WriteToConsole(string ConsoleName, string Text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/SettingsChanged", ReplyAction="http://tempuri.org/IWcfService/SettingsChangedResponse")]
        void SettingsChanged(bool IsChangePending);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWcfServiceChannel : ADTManager.WcfCommunication.IWcfService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WcfServiceClient : System.ServiceModel.DuplexClientBase<ADTManager.WcfCommunication.IWcfService>, ADTManager.WcfCommunication.IWcfService {
        
        public WcfServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public WcfServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public WcfServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public WcfServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public WcfServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public ADTManager.WcfCommunication.ADTServiceOnConnectData Connect() {
            return base.Channel.Connect();
        }
        
        public void Disconnect() {
            base.Channel.Disconnect();
        }
    }
}
