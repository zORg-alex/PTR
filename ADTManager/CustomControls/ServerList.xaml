<ListBox x:Class="ADTManager.CustomControls.ServerList"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			 xmlns:main="clr-namespace:ADTManager"
             xmlns:ccon="clr-namespace:ADTManager.CustomControls"
             mc:Ignorable="d" d:DataContext="{DynamicResource TestMVM}" ItemsSource="{Binding ServerViewModels}"
             d:DesignHeight="300" d:DesignWidth="300" ItemContainerStyle="{DynamicResource ListBoxItemStyle}" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="White" BorderThickness="0" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Center" Padding="1">
	<ListBox.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="../Resources/Icons_Small.xaml"/>
				<ResourceDictionary Source="../Resources/WhiteStyleRes.xaml"/>
			</ResourceDictionary.MergedDictionaries>
			<main:ManagerViewModel x:Key="TestMVM"/>
			<Style x:Key="FocusVisual">
				<Setter Property="Control.Template">
					<Setter.Value>
						<ControlTemplate>
							<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA"/>
			<SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da"/>
			<SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
			<SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
			<SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA"/>
			<SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA"/>
			<Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
				<Setter Property="SnapsToDevicePixels" Value="True"/>
				<Setter Property="Padding" Value="4,1"/>
				<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
				<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
				<Setter Property="Background" Value="#7F1765A4"/>
				<Setter Property="Foreground" Value="#FF79A2CB"/>
				<Setter Property="BorderThickness" Value="1"/>
				<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
				<Setter Property="IsSelected" Value="{Binding Selected}"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ListBoxItem}">
							<Grid x:Name="Bd" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
								<Grid.ColumnDefinitions>
									<ColumnDefinition/>
									<ColumnDefinition Width="23"/>
								</Grid.ColumnDefinitions>
								<TextBlock x:Name="SelectButton" Margin="1"
								   FontSize="16" FontWeight="Bold"
								   Background="#7F1765A4">
									<TextBlock Text="{Binding Name}"/>
									<TextBlock.Style>
										<Style TargetType="TextBlock">
											<Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"/>
											<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}"/>
											<Style.Triggers>
												<DataTrigger Binding="{Binding SettingsChanged}" Value="True">
													<Setter Property="Background" Value="#7F17A44A"/>
													<Setter Property="Foreground" Value="#FF84CB79"/>
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</TextBlock.Style>
								</TextBlock>
								<Button x:Name="SettingsButton" Command="{Binding comOpenSettingsWindow}" BorderThickness="0" Margin="1" Width="21" Height="21"
													   Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"
													   Grid.Column="1" Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}">
									<Grid Width="11">
										<Ellipse Fill="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}" Width="3" Height="3"/>
										<Ellipse Fill="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}" Width="3" Height="3" HorizontalAlignment="Right"/>
										<Ellipse Fill="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}" Width="3" Height="3" HorizontalAlignment="Left"/>
									</Grid>
								</Button>
							</Grid>
							<ControlTemplate.Triggers>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsMouseOver" Value="True"/>
									</MultiTrigger.Conditions>
									<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
								</MultiTrigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="Selector.IsSelectionActive" Value="False"/>
										<Condition Property="IsSelected" Value="True"/>
									</MultiTrigger.Conditions>
									<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
								</MultiTrigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="Selector.IsSelectionActive" Value="True"/>
										<Condition Property="IsSelected" Value="True"/>
									</MultiTrigger.Conditions>
									<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
								</MultiTrigger>
								<Trigger Property="IsEnabled" Value="False">
									<Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ResourceDictionary>
	</ListBox.Resources>
</ListBox>
